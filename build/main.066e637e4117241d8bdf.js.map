{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.jsx","webpack:///./src/components/Wrapper.jsx","webpack:///./src/utilities/action.js","webpack:///./src/actions/tasks.js","webpack:///./src/containers/Tasks.jsx","webpack:///./src/pages/Hello.jsx","webpack:///./src/components/RelativeBox.jsx","webpack:///./src/pages/Menu.jsx","webpack:///./src/utilities/style.js","webpack:///./src/index.jsx","webpack:///./src/local-storage.js","webpack:///./src/components/Time.jsx","webpack:///./src/components/Day.jsx","webpack:///./src/components/MenuButton.jsx","webpack:///./src/reducers/tasks.js","webpack:///./src/reducers/index.js","webpack:///./src/utilities/reducer.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","theme","_arwes_arwes__WEBPACK_IMPORTED_MODULE_6__","color","primary","base","dark","light","header","App","_this$props","_this","props","history","store","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","react_redux__WEBPACK_IMPORTED_MODULE_1__","connected_react_router__WEBPACK_IMPORTED_MODULE_4__","styled_components__WEBPACK_IMPORTED_MODULE_7__","breakpoints","_components_Wrapper__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","exact","path","component","_pages_Hello__WEBPACK_IMPORTED_MODULE_9__","_pages_Menu__WEBPACK_IMPORTED_MODULE_10__","Component","__webpack_exports__","react_hot_loader__WEBPACK_IMPORTED_MODULE_5__","SPRING_MORNING_COLLECTION_ID","SPRING_DAY_COLLECTION_ID","SPRING_EVENING_COLLECTION_ID","SPRING_NIGHT_COLLECTION_ID","SUMMER_MORNING_COLLECTION_ID","SUMMER_DAY_COLLECTION_ID","SUMMER_EVENING_COLLECTION_ID","SUMMER_NIGHT_COLLECTION_ID","AUTUMN_MORNING_COLLECTION_ID","AUTUMN_DAY_COLLECTION_ID","AUTUMN_EVENING_COLLECTION_ID","AUTUMN_NIGHT_COLLECTION_ID","WINTER_MORNING_COLLECTION_ID","WINTER_DAY_COLLECTION_ID","WINTER_EVENING_COLLECTION_ID","WINTER_NIGHT_COLLECTION_ID","StyledWrapper","styled_components__WEBPACK_IMPORTED_MODULE_2__","div","withConfig","displayName","Background","Wrapper","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","updateBackground","setInterval","setState","collectionId","getCollectionId","clearInterval","date","arguments","undefined","Date","month","getMonth","hours","getHours","state","style","backgroundImage","concat","screen","width","height","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","node","createFetchAction","type","_len","attributes","Array","_key","isFetching","error","visualize","_len2","args","_key2","_objectSpread","reduce","attribute","index","fetchTasksAction","tasks_fetchTasks","dispatch","fetch","method","credentials","then","response","text","icalData","icalString","jCalData","ical_default","parse","ICAL","getAllSubcomponents","map","vevent","title","getFirstPropertyValue","start","tasks_mapTasks","Promise","resolve","catch","e","reject","StyledTasks","styled_components_browser_esm","ul","radius","Task","li","Tasks_Tasks","fetchData","updateTasks","fetchTasks","tasks","react_default","task","day","year","PureComponent","containers_Tasks","es","reducers","PositionedTimeDate","PositionedTasks","Hello_Hello","Hello","Hello_classCallCheck","Hello_defineProperty","Hello_assertThisInitialized","Hello_possibleConstructorReturn","Hello_getPrototypeOf","Time","Day","MenuButton","to","RelativeBox","dist","Spacer","pulse","Online","_ref","online","success","danger","StyledLogo","Icon","span","AppListItem","MarginButton","lib","Menu_Menu","Menu","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","ip","pc","iceServers","createDataChannel","createOffer","setLocalDescription","onicecandidate","ice","candidate","myIP","exec","elem","document","querySelector","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","_this$state","flexWrap","pt","px","animate","anim","show","entered","small","navigator","onLine","inline","onClick","location","disableFullscreen","layer","enableFullscreen","fa","open","focus","size","particles_default","params","particles","number","retina_detect","position","top","left","right","bottom","fullScreen","innerWidth","innerHeight","colors","primaryContrast","secondary","background","backgroundOverlay","font","fontLight","info","warning","disabled","borders","inputRadius","shadows","y","textY","persistedState","serializedState","localStorage","getItem","JSON","err","loadState","src_history","createBrowserHistory_default","src_store","redux","redux_devtools_extension","next","action","build","subscribe","throttle_default","_objectDestructuringEmpty","getState","stringify","setItem","saveState","react_dom_default","render","getElementById","src_render","StyledTime","time","_utilities_style__WEBPACK_IMPORTED_MODULE_3__","getSeconds","setTimeout","updateTime","updateInterval","getTimeUntilNextMinute","seconds","toString","padStart","getMinutes","bool","StyledDay","midnight","setHours","setMinutes","setSeconds","setMilliseconds","getTime","updateDate","getTimeUntilMidnight","getDate","toLocaleDateString","MenuLink","MenuSquare","appReducer","loadingBar","reducers_getTasks","target","mapState","_toConsumableArray","wrap"],"mappings":"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","file":"main.066e637e4117241d8bdf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([117,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { hot } from \"react-hot-loader\";\nimport { ThemeProvider, createTheme, Arwes } from \"@arwes/arwes\";\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Hello from \"./pages/Hello\";\nimport Menu from \"./pages/Menu\";\n\nconst theme = createTheme({\n  color: {\n    primary: {\n      base: \"#fff\",\n      dark: \"#56ccf2\",\n      light: \"#fff\"\n    },\n    header: {\n      base: \"#fff\",\n      dark: \"#56ccf2\",\n      light: \"#fff\"\n    }\n  }\n});\n\n/**\n * The root component rendering the whole app\n */\nclass App extends React.Component {\n  /**\n   * Renders the component\n   * @returns {Component} The component\n   */\n  render = () => {\n    const { history, store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={theme}>\n            <StyledThemeProvider\n              theme={{\n                breakpoints: [\"36rem\", \"48rem\", \"62rem\", \"75rem\"]\n              }}\n            >\n              <Arwes>\n                <Wrapper>\n                  <Switch>\n                    <Route exact path=\"/\" component={Hello} />\n                    <Route exact path=\"/menu\" component={Menu} />\n                  </Switch>\n                </Wrapper>\n              </Arwes>\n            </StyledThemeProvider>\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    );\n  };\n}\n\nexport default hot(module)(App);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst SPRING_MORNING_COLLECTION_ID = 2481547;\nconst SPRING_DAY_COLLECTION_ID = 2481588;\nconst SPRING_EVENING_COLLECTION_ID = 2481562;\nconst SPRING_NIGHT_COLLECTION_ID = 2481540;\n\nconst SUMMER_MORNING_COLLECTION_ID = 2481549;\nconst SUMMER_DAY_COLLECTION_ID = 2481568;\nconst SUMMER_EVENING_COLLECTION_ID = 2481563;\nconst SUMMER_NIGHT_COLLECTION_ID = 2481538;\n\nconst AUTUMN_MORNING_COLLECTION_ID = 2481553;\nconst AUTUMN_DAY_COLLECTION_ID = 2481577;\nconst AUTUMN_EVENING_COLLECTION_ID = 2481565;\nconst AUTUMN_NIGHT_COLLECTION_ID = 2481541;\n\nconst WINTER_MORNING_COLLECTION_ID = 2481554;\nconst WINTER_DAY_COLLECTION_ID = 2481566;\nconst WINTER_EVENING_COLLECTION_ID = 2481574;\nconst WINTER_NIGHT_COLLECTION_ID = 2481543;\n\nconst StyledWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-color: #6ab5d9;\n\n  z-index: -1;\n`;\n\n/**\n * The app wrapper\n * @returns {Component} The component\n */\nclass Wrapper extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { collectionId: this.getCollectionId() };\n  }\n\n  componentDidMount = () => {\n    this.updateBackground = setInterval(\n      () => this.setState({ collectionId: this.getCollectionId() }),\n      1000 * 60 * 10\n    );\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.updateBackground);\n  };\n\n  /** Returns the collection id appropriate for the given date\n   * @param {Date} [date=new Date()] The date to get the collection id of\n   * @returns {number} The collection id\n   */\n  getCollectionId = (date = new Date()) => {\n    const month = date.getMonth() + 1,\n      hours = date.getHours();\n\n    if (month >= 3 && month <= 5) {\n      //spring\n      if (hours >= 7 && hours <= 10) {\n        return SPRING_MORNING_COLLECTION_ID;\n      } else if (hours >= 11 && hours <= 17) {\n        return SPRING_DAY_COLLECTION_ID;\n      } else if (hours >= 18 && hours <= 20) {\n        return SPRING_EVENING_COLLECTION_ID;\n      } else {\n        return SPRING_NIGHT_COLLECTION_ID;\n      }\n    } else if (month >= 6 && month <= 8) {\n      //summer\n      if (hours >= 6 && hours <= 9) {\n        return SUMMER_MORNING_COLLECTION_ID;\n      } else if (hours >= 10 && hours <= 18) {\n        return SUMMER_DAY_COLLECTION_ID;\n      } else if (hours >= 19 && hours <= 22) {\n        return SUMMER_EVENING_COLLECTION_ID;\n      } else {\n        return SUMMER_NIGHT_COLLECTION_ID;\n      }\n    } else if (month >= 9 && month <= 11) {\n      //autumn\n      if (hours >= 7 && hours <= 10) {\n        return AUTUMN_MORNING_COLLECTION_ID;\n      } else if (hours >= 11 && hours <= 17) {\n        return AUTUMN_DAY_COLLECTION_ID;\n      } else if (hours >= 18 && hours <= 20) {\n        return AUTUMN_EVENING_COLLECTION_ID;\n      } else {\n        return AUTUMN_NIGHT_COLLECTION_ID;\n      }\n    } else {\n      //winter\n      if (hours >= 8 && hours <= 11) {\n        return WINTER_MORNING_COLLECTION_ID;\n      } else if (hours >= 12 && hours <= 16) {\n        return WINTER_DAY_COLLECTION_ID;\n      } else if (hours >= 17 && hours <= 19) {\n        return WINTER_EVENING_COLLECTION_ID;\n      } else {\n        return WINTER_NIGHT_COLLECTION_ID;\n      }\n    }\n  };\n\n  render = () => {\n    const { collectionId } = this.state;\n\n    return (\n      <StyledWrapper>\n        <Background\n          style={{\n            backgroundImage: `url(https://source.unsplash.com/collection/${collectionId}/${\n              screen.width\n            }x${screen.height})`\n          }}\n        />\n        {this.props.children}\n      </StyledWrapper>\n    );\n  };\n}\n\nWrapper.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Wrapper;\n","import pluralize from \"pluralize\";\nimport changeCase from \"change-case\";\n\n/**\n * Creates a standardized fetch action\n * @param {string} type The action type string\n * @param {...string} attributes Additional action property names\n * @returns {function} The action creator\n */\nexport const createFetchAction = (type = \"\", ...attributes) => (\n  isFetching = false,\n  error = null,\n  visualize = false,\n  ...args\n) => ({\n  type,\n  isFetching,\n  error,\n  visualize,\n  ...attributes.reduce((object, attribute, index) => {\n    object[attribute] = args[index];\n    return object;\n  }, {})\n});\n\n/**\n * Creates a redux action for fetching one item of a type\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createFetchSingleItemAction = (name, ...attributes) =>\n  createFetchAction(\n    \"FETCH_\" + changeCase.snakeCase(name).toUpperCase(),\n    \"itemId\",\n    \"item\",\n    ...attributes\n  );\n\n/**\n * Creates a redux thunk that fetches a single item of a certain type\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the item id and the passed arguments\n * @param {function} mapItem A function mapping the item into the desired format\n * @param {function} callback A function called before dispatching the action. Can dispatch more actions\n * @returns {function} The redux thunk\n */\nexport const createFetchSingleItemThunk = (\n  action,\n  endpoint,\n  mapItem = item => item,\n  callback\n) => (itemId, visualize = false, ...attributes) => dispatch => {\n  dispatch(action(true, null, visualize, itemId, null, ...attributes));\n\n  return fetch(endpoint(itemId, ...attributes), {\n    method: \"GET\"\n  })\n    .then(({ json: item, response }) => {\n      const mappedItem = mapItem(item);\n\n      if (callback) {\n        callback(dispatch, response, item, visualize, ...attributes);\n      }\n\n      dispatch(\n        action(false, null, visualize, itemId, mappedItem, ...attributes)\n      );\n\n      return Promise.resolve({ item: mappedItem, originalItem: item });\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, itemId, null, ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux action for fetching all items of a type\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createFetchItemsAction = (name, ...attributes) =>\n  createFetchAction(\n    \"FETCH_\" + changeCase.snakeCase(pluralize(name)).toUpperCase(),\n    \"items\",\n    ...attributes\n  );\n\n/**\n * Creates a redux action for fetching a page of items\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createFetchItemPageAction = (name, ...attributes) =>\n  createFetchItemsAction(name, \"page\", ...attributes);\n\n/**\n * Fetches all items by using a pagination\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the page and the number of items per page\n * @param {function} mapItem A function mapping the item into the desired format\n * @param {function} callback A function called before dispatching the action. Can dispatch more actions\n * @returns {promise} A promise yielding all items or an error\n */\nexport const createFetchItemPageThunk = (\n  action,\n  endpoint,\n  mapItem = item => item,\n  callback\n) => (\n  page = 1,\n  pageTo = -1,\n  perPage = 10,\n  visualize = false,\n  ...attributes\n) => dispatch => {\n  dispatch(action(true, null, visualize, [], page, ...attributes));\n\n  return fetch(endpoint(page, perPage, ...attributes), {\n    method: \"GET\"\n  }).then(({ json: items, response }) => {\n    const total = parseInt(response.headers.get(\"x-wp-total\"));\n\n    const mappedItems = items.map(mapItem);\n\n    if (\n      (page - 1) * perPage + items.length < total &&\n      (pageTo > 0 ? page < pageTo : true)\n    ) {\n      if (callback) {\n        callback(\n          dispatch,\n          response,\n          items,\n          page,\n          perPage,\n          visualize,\n          total,\n          ...attributes\n        );\n      }\n\n      dispatch(\n        action(false, null, visualize, mappedItems, page, ...attributes)\n      );\n\n      return createFetchItemPageThunk(action, endpoint, mapItem, callback)(\n        page + 1,\n        pageTo,\n        perPage,\n        visualize,\n        ...attributes\n      )(dispatch).then(\n        ({ items: nextItems, originalItems: newOriginalItems }) =>\n          Promise.resolve({\n            items: [...mappedItems, ...nextItems],\n            originalItems: [...items, ...newOriginalItems]\n          })\n      );\n    }\n\n    if (callback) {\n      callback(\n        dispatch,\n        response,\n        items,\n        page,\n        perPage,\n        visualize,\n        total,\n        ...attributes\n      );\n    }\n\n    dispatch(action(false, null, visualize, mappedItems, page, ...attributes));\n\n    return Promise.resolve({\n      items: mappedItems,\n      originalItems: items,\n      perPage,\n      total\n    });\n  });\n};\n\n/**\n * Creates a redux thunk that fetches all items of a certain type\n * @param {function} action The redux action to dispatch\n * @param {function} endpoint A function generating the endpoint url based on the page and the number of items per page\n * @param {function} mapItem A function mapping the item into the desired format\n * @param {function} callback A function called before dispatching the action. Can dispatch more actions\n * @returns {function} The redux thunk\n */\nexport const createFetchAllItemsThunk = (\n  action,\n  endpoint,\n  mapItem = item => item,\n  callback\n) => (perPage = 10, visualize = false, ...attributes) => dispatch => {\n  dispatch(action(true, null, visualize, [], null, ...attributes));\n\n  return createFetchItemPageThunk(action, endpoint, mapItem, callback)(\n    1,\n    -1,\n    perPage,\n    visualize,\n    ...attributes\n  )(dispatch)\n    .then(({ items }) => {\n      dispatch(action(false, null, visualize, items, null, ...attributes));\n\n      return Promise.resolve(items);\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, [], null, ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux thunk that fetches multiple items of a certain type\n * @param {function} action The redux action to dispatch\n * @param {function} endpoint A function generating the endpoint url based on the attributes\n * @param {function} mapItem A function mapping the item into the desired format\n * @param {function} callback A function called before dispatching the action. Can dispatch more actions\n * @returns {function} The redux thunk\n */\nexport const createFetchItemsThunk = (\n  action,\n  endpoint,\n  mapItem = item => item,\n  callback\n) => (visualize = false, ...attributes) => dispatch => {\n  dispatch(action(true, null, visualize, [], ...attributes));\n\n  return fetch(endpoint(...attributes), {\n    method: \"GET\"\n  })\n    .then(({ json: items }) => {\n      const mappedItems = items.map(mapItem);\n\n      if (callback) {\n        callback(dispatch, items, visualize, ...attributes);\n      }\n\n      dispatch(action(false, null, visualize, mappedItems, ...attributes));\n      return Promise.resolve({ items: mappedItems, originalItems: items });\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, [], ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux action for creating an item of a type\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createCreateItemAction = (name, ...attributes) =>\n  createFetchAction(\n    \"CREATE_\" + changeCase.snakeCase(name).toUpperCase(),\n    \"item\",\n    ...attributes\n  );\n\n/**\n * Creates a redux thunk that creates an item of a certain type\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the item and the passed args\n * @param {function} mapItem A function mapping the item into the desired format\n * @returns {function} The redux thunk\n */\nexport const createCreateItemThunk = (\n  action,\n  endpoint,\n  mapItem = item => item\n) => (item, visualize = false, ...attributes) => dispatch => {\n  dispatch(action(true, null, visualize, item, ...attributes));\n\n  return fetch(endpoint(item, ...attributes), {\n    method: \"POST\",\n    body: JSON.stringify(item)\n  })\n    .then(({ json: item }) => {\n      const mappedItem = mapItem(item);\n\n      dispatch(action(false, null, visualize, mappedItem, ...attributes));\n\n      return Promise.resolve({ mappedItem, originalItem: item });\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, item, ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux action for updating an item of a type\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createUpdateItemAction = (name, ...attributes) =>\n  createFetchAction(\n    \"UPDATE_\" + changeCase.snakeCase(name).toUpperCase(),\n    \"itemId\",\n    \"item\",\n    ...attributes\n  );\n\n/**\n * Creates a redux thunk that updates an item of a certain type\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the itemId, the item and the passed attributes\n * @param {function} mapItem A function mapping the item into the desired format\n * @returns {function} The redux thunk\n */\nexport const createUpdateItemThunk = (\n  action,\n  endpoint,\n  mapItem = item => item\n) => (itemId, item, visualize = false, ...attributes) => dispatch => {\n  dispatch(action(true, null, visualize, itemId, item, ...attributes));\n\n  return fetch(endpoint(itemId, item, ...attributes), {\n    method: \"PUT\",\n    body: JSON.stringify(item),\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    })\n  })\n    .then(({ json: item }) => {\n      const mappedItem = mapItem(item);\n\n      dispatch(\n        action(false, null, visualize, itemId, mappedItem, ...attributes)\n      );\n\n      return Promise.resolve({ item, originalItem: item });\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, itemId, item, ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux action for deleting an item of a type\n * @param {string} name The singular name of the item type\n * @param {...string} attributes Additional action property names\n * @returns {function} The redux action\n */\nexport const createDeleteItemAction = (name, ...attributes) =>\n  createFetchAction(\n    \"DELETE_\" + changeCase.snakeCase(name).toUpperCase(),\n    \"itemId\",\n    ...attributes\n  );\n\n/**\n * Creates a redux thunk that deletes an item of a certain type\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the item and the passed attributes\n * @returns {function} The redux thunk\n */\nexport const createDeleteItemThunk = (action, endpoint) => (\n  itemId,\n  visualize = false,\n  ...attributes\n) => dispatch => {\n  dispatch(action(true, null, visualize, itemId, ...attributes));\n\n  return fetch(endpoint(itemId, ...attributes), {\n    method: \"DELETE\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    })\n  })\n    .then(() => {\n      dispatch(action(false, null, visualize, itemId, ...attributes));\n\n      return Promise.resolve();\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, itemId, ...attributes));\n\n      return Promise.reject(error);\n    });\n};\n\n/**\n * Creates a redux action for deleting one item of a type\n * @param {string} name The singular name of the item type\n * @returns {function} The redux action\n */\nexport const createRemoveSingleItemAction = name =>\n  createFetchAction(\n    \"DELETE_\" + changeCase.snakeCase(name).toUpperCase(),\n    \"itemId\",\n    \"item\"\n  );\n\n/**\n * Creates a redux thunk that deletes a single item of a certain type\n * @param {function} action The action that should be dispatched\n * @param {function} endpoint A function generating the endpoint url based on the item id and the passed arguments\n * @returns {function} The redux thunk\n */\nexport const createRemoveSingleItemThunk = (action, endpoint) => (\n  itemId,\n  args = {},\n  visualize = false\n) => dispatch => {\n  dispatch(action(true, null, visualize, itemId));\n\n  return fetch(endpoint(itemId, args), {\n    method: \"DELETE\"\n  })\n    .then(() => {\n      dispatch(action(false, null, visualize, itemId));\n\n      return Promise.resolve();\n    })\n    .catch(error => {\n      dispatch(action(false, error, visualize, itemId));\n\n      return Promise.reject(error);\n    });\n};\n","import iCal from \"ical.js\";\n\nimport { createFetchAction } from \"../utilities/action\";\n\n/**\n * Parses the ical string to tasks\n * @param {string} icalString The received ical data\n * @returns {Array} The mapped tasks\n */\nconst mapTasks = icalString => {\n  const jCalData = iCal.parse(icalString);\n  const component = new ICAL.Component(jCalData);\n  const vevents = component.getAllSubcomponents(\"vevent\");\n\n  return vevents.map(vevent => ({\n    title: vevent.getFirstPropertyValue(\"summary\"),\n    start: vevent.getFirstPropertyValue(\"dtstart\")\n  }));\n};\n\n/**\n * Creates the fetch tasks action\n * @param {boolean} isFetching Whether the fetch is in progress\n * @param {Error|null} error The error if one occurred\n * @param {boolean} visualize Whether the visualize the fetch progresss\n * @param {boolean} isFetching Whether the fetch is in progress\n * @param {Array} tasks The fetched tasks\n * @returns {Object} The redux action\n */\nconst fetchTasksAction = createFetchAction(\"FETCH_TASKS\", \"tasks\");\n\n/**\n * Fetches all sales\n * @param {boolean} visualize Whether to visualize the progress of this action\n * @returns {Promise} The fetch promise\n */\nexport const fetchTasks = (visualize = false) => dispatch => {\n  dispatch(fetchTasksAction(true, null, visualize, [], []));\n\n  return fetch(\n    `/wunderlist.php`,\n    {\n      method: \"GET\",\n      credentials: \"include\"\n    }\n  )\n    .then(response => response.text())\n    .then(icalData => {\n      dispatch(fetchTasksAction(false, null, visualize, mapTasks(icalData)));\n\n      return Promise.resolve(icalData);\n    })\n    .catch(e => {\n      dispatch(fetchTasksAction(false, e, visualize, [], []));\n\n      return Promise.reject(e);\n    });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport { shadows, borders } from \"../utilities/style\";\nimport { getTasks } from \"../reducers/index\";\nimport { fetchTasks } from \"../actions/tasks\";\n\nconst StyledTasks = styled.ul`\n  display: block;\n  list-style: none;\n\n  width: 20vw;\n  padding: 0.5rem 1rem;\n  margin: 0;\n\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: ${borders.radius};\n\n  color: #555;\n  font-weight: normal;\n  font-size: 1vw;\n\n  max-height: 40vh;\n  overflow-y: scroll;\n`;\n\nconst Task = styled.li`\n  margin-bottom: 0.5rem;\n  border-bottom: #555 1px solid;\n  padding-bottom: 0.5rem;\n\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n  }\n\n  h2,\n  h3 {\n    margin: 0;\n  }\n`;\n\n/**\n * The current tasks\n * @returns {Component} The component\n */\nclass Tasks extends React.PureComponent {\n  componentDidMount = () => {\n    this.fetchData();\n\n    this.updateTasks = setInterval(this.fetchData, 1000 * 60 * 10);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.updateTasks);\n  };\n\n  fetchData = () => this.props.fetchTasks();\n\n  render = () => {\n    const { tasks } = this.props;\n    return (\n      <StyledTasks>\n        <Task>\n          <h2>Aufgaben</h2>\n        </Task>\n        {tasks.map((task, index) => (\n          <Task key={index}>\n            <h3>{task.title}</h3>\n            {task.start.day}.{task.start.month}.{task.start.year}\n          </Task>\n        ))}\n      </StyledTasks>\n    );\n  };\n}\n\nTasks.propTypes = {};\n\nconst mapStateToProps = state => ({ tasks: getTasks(state) });\nconst mapDispatchToProps = dispatch => ({\n  /**\n   * Fetches all tasks\n   * @param {boolean} visualize Whether to visualize the progress\n   * @returns {Promise} The fetch promise\n   */\n  fetchTasks(visualize = true) {\n    return dispatch(fetchTasks(visualize));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tasks);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Time from \"../components/Time\";\nimport Day from \"../components/Day\";\nimport Tasks from \"../containers/Tasks\";\nimport MenuButton from \"../components/MenuButton\";\n\nconst PositionedTimeDate = styled.div`\n  position: absolute;\n  top: 5vh;\n  left: 5vw;\n\n  font-size: 11vw;\n\n  & > time:last-child {\n    margin-top: -2rem;\n    font-size: 6vw;\n  }\n`;\n\nconst PositionedTasks = styled.div`\n  position: absolute;\n  bottom: 5vh;\n  right: 5vw;\n`;\n\n/**\n * The hello screen\n * @returns {Component} The component\n */\nclass Hello extends React.PureComponent {\n  constructor() {\n    super();\n  }\n  render = () => {\n    return (\n      <div>\n        <PositionedTimeDate>\n          <Time />\n          <Day />\n        </PositionedTimeDate>\n        <PositionedTasks>\n          <Tasks />\n        </PositionedTasks>\n        <MenuButton to=\"/menu\" />\n      </div>\n    );\n  };\n}\n\nHello.propTypes = {};\n\nexport default Hello;\n","import { Box } from \"grid-styled\";\nimport styled from \"styled-components\";\n\nexport default styled(Box)`\n  position: relative;\n`;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Particles from \"react-particles-js\";\nimport { List, Logo, Button, Words, Project, Loading } from \"@arwes/arwes\";\nimport { Flex, Box } from \"grid-styled\";\nimport { FaItunes, FaSpotify, FaYoutube } from \"react-icons/fa\";\n\nimport MenuButton from \"../components/MenuButton\";\nimport RelativeBox from \"../components/RelativeBox\";\nimport { colors, shadows } from \"../utilities/style\";\nimport Time from \"../components/Time\";\nimport Day from \"../components/Day\";\n\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  background: #56ccf2; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #56ccf2,\n    #2f80ed\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #56ccf2,\n    #2f80ed\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n  z-index: -1;\n\n  opacity: 0.9;\n`;\n\nconst Spacer = styled.div`\n  width: 0.5rem;\n  display: inline-block;\n`;\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(1.1);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst Online = styled.div`\n  background-color: ${({ online }) =>\n    online ? colors.success : colors.danger};\n\n  height: 1rem;\n  width: 1rem;\n\n  border-radius: 50%;\n  vertical-align: middle;\n\n  display: inline-block;\n\n  animation: ${pulse} 1.3s ease-in-out infinite;\n`;\n\nconst StyledLogo = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translateX(-50%) translateY(-50%);\n`;\n\nconst Icon = styled.span`\n  vertical-align: middle;\n  margin-right: 0.5rem;\n`;\n\nconst AppListItem = styled.li`\n  margin-bottom: 0.5rem;\n`;\n\nconst MarginButton = styled(Button)`\n  margin-right: 0.5rem;\n  margin-bottom: 0.5rem;\n`;\n\n/**\n * The menu screen\n * @returns {Component} The component\n */\nclass Menu extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      ip: false,\n      fullscreen:\n        window.fullScreen ||\n        (window.innerWidth == screen.width &&\n          window.innerHeight == screen.height)\n    };\n  }\n\n  componentDidMount = () => {\n    window.RTCPeerConnection =\n      window.RTCPeerConnection ||\n      window.mozRTCPeerConnection ||\n      window.webkitRTCPeerConnection; //compatibility for Firefox and chrome\n\n    if (!window.RTCPeerConnection) {\n      return this.setState({ ip: \"Unknown\" });\n    }\n\n    let pc = new RTCPeerConnection({ iceServers: [] });\n\n    pc.createDataChannel(\"\"); //create a bogus data channel\n    pc.createOffer(pc.setLocalDescription.bind(pc), () => {}); // create offer and set local description\n    pc.onicecandidate = ice => {\n      if (ice && ice.candidate && ice.candidate.candidate) {\n        let myIP = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(\n          ice.candidate.candidate\n        )[1];\n        this.setState({ ip: myIP });\n        pc.onicecandidate = () => {};\n      }\n    };\n  };\n\n  enableFullscreen = () => {\n    const elem = document.querySelector(\"body\");\n\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n\n    this.setState({ fullscreen: true });\n  };\n\n  disableFullscreen = () => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n\n    this.setState({ fullscreen: false });\n  };\n\n  render = () => {\n    const { ip, fullscreen } = this.state;\n\n    return (\n      <div>\n        <Flex flexWrap=\"wrap\">\n          <RelativeBox width={[1, 1, 1, 1 / 3]} pt={3} px={3}>\n            <Project animate header=\"Alethia V0.1\">\n              {anim => (\n                <div>\n                  <div>\n                    <Words animate show={anim.entered}>\n                      IP\n                    </Words>\n                    <Spacer />\n                    {ip ? (\n                      <Words animate show={anim.entered}>\n                        {ip}\n                      </Words>\n                    ) : (\n                      <Loading animate small />\n                    )}\n                  </div>\n                  <div>\n                    <Words animate show={anim.entered}>\n                      Online\n                    </Words>\n                    <Spacer />\n                    <Online online={navigator.onLine} />\n                  </div>\n                  <div>\n                    <Words animate show={anim.entered}>\n                      Time\n                    </Words>\n                    <Spacer />\n                    <Day inline /> <Time inline />\n                  </div>\n                </div>\n              )}\n            </Project>\n          </RelativeBox>\n          <RelativeBox width={[1, 1, 1, 1 / 3]} pt={3} px={3}>\n            <Project animate header=\"Actions\">\n              <MarginButton\n                animate\n                onClick={() => {\n                  window.location = \"/\";\n                }}\n              >\n                Refresh\n              </MarginButton>\n              {fullscreen ? (\n                <MarginButton\n                  animate\n                  onClick={this.disableFullscreen}\n                  layer=\"alert\"\n                >\n                  Disable Fullscreen\n                </MarginButton>\n              ) : (\n                <MarginButton\n                  animate\n                  onClick={this.enableFullscreen}\n                  layer=\"success\"\n                >\n                  Enable Fullscreen\n                </MarginButton>\n              )}\n            </Project>\n          </RelativeBox>\n          <RelativeBox width={[1, 1, 1, 1 / 3]} pt={3} px={3} />\n          <RelativeBox width={[1, 1, 1, 1 / 3]} pt={3} px={3}>\n            <Project animate header=\"Applications\">\n              <List node=\"ul\">\n                <AppListItem>\n                  <Button\n                    animate\n                    onClick={() => (window.location = \"itunes://\")}\n                  >\n                    <Icon>\n                      <FaItunes />\n                    </Icon>\n                    iTunes\n                  </Button>\n                </AppListItem>\n                <AppListItem>\n                  <Button\n                    animate\n                    onClick={() => (window.location = \"spotify://\")}\n                  >\n                    <Icon>\n                      <FaSpotify />\n                    </Icon>\n                    Spotify\n                  </Button>\n                </AppListItem>\n                <AppListItem>\n                  <Button\n                    animate\n                    onClick={() => {\n                      var win = window.open(\"https://youtube.com\", \"_blank\");\n                      win.focus();\n                    }}\n                  >\n                    <Icon>\n                      <FaYoutube />\n                    </Icon>\n                    YouTube\n                  </Button>\n                </AppListItem>\n              </List>\n            </Project>\n          </RelativeBox>\n        </Flex>\n        <Background>\n          <StyledLogo>\n            <Logo animate size={300} />\n          </StyledLogo>\n        </Background>\n\n        <Particles\n          params={{\n            particles: {\n              number: {\n                value: 80\n              }\n            },\n            retina_detect: true\n          }}\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            width: \"100%\"\n          }}\n        />\n        <MenuButton to=\"/\" />\n      </div>\n    );\n  };\n}\n\nMenu.propTypes = {};\n\nexport default Menu;\n","import { css } from \"styled-components\";\n\nexport const colors = {\n  primary: \"#2c3e50\",\n  primaryContrast: \"#ffffff\",\n  secondary: \"#464646\",\n  background: \"#f5f5f5\",\n  backgroundOverlay: \"#ffffff\",\n  font: \"#464646\",\n  fontLight: \"#888888\",\n  success: \"#2ecc71\",\n  info: \"#3498db\",\n  warning: \"#FCBF37\",\n  danger: \"#e74c3c\",\n  disabled: \"#cccccc\"\n};\n\nexport const borders = {\n  radius: \"5px\",\n  inputRadius: \"3px\"\n};\n\nexport const shadows = {\n  y: \"0px 2px 2px 0px rgba(0, 0, 0, 0.05)\",\n  textY: \"0px 2px 2px rgba(0, 0, 0, 0.1)\"\n};\n\nexport const media = {\n  minSmall: (...args) => css`\n    @media (min-width: 576px) {\n      ${css(...args)};\n    }\n  `,\n  maxSmall: (...args) => css`\n    @media (max-width: 575px) {\n      ${css(...args)};\n    }\n  `,\n  minMedium: (...args) => css`\n    @media (min-width: 768px) {\n      ${css(...args)};\n    }\n  `,\n  maxMedium: (...args) => css`\n    @media (max-width: 767px) {\n      ${css(...args)};\n    }\n  `,\n  minLarge: (...args) => css`\n    @media (min-width: 992px) {\n      ${css(...args)};\n    }\n  `,\n  maxLarge: (...args) => css`\n    @media (max-width: 991px) {\n      ${css(...args)};\n    }\n  `,\n  minXLarge: (...args) => css`\n    @media (min-width: 1200px) {\n      ${css(...args)};\n    }\n  `,\n  maxXLarge: (...args) => css`\n    @media (max-width: 1199px) {\n      ${css(...args)};\n    }\n  `\n};\n","//react\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\nimport throttle from \"lodash/throttle\";\n\nimport App from \"./App\";\nimport \"./scss/global\";\nimport { loadState, saveState } from \"./local-storage\";\nimport reducers from \"./reducers\";\n\n//Load state from local storage and create history object\nconst persistedState = loadState();\nconst history = createHistory();\n\n//and the redux store\nconst store = createStore(\n  connectRouter(history)(reducers),\n  persistedState,\n  composeWithDevTools(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunkMiddleware,\n      store => next => action => {\n        if (action.visualize) {\n          store.dispatch(action.isFetching ? showLoading() : hideLoading());\n        }\n        return next(action);\n      }\n    )\n  )\n);\n\n//storing some keys of the application state in the localstorage\nstore.subscribe(\n  throttle(() => {\n    const {} = store.getState();\n\n    saveState({});\n  }, 1000)\n);\n/**\n * Renders the application\n * @param {Component} Component that should be rendered as the top level application\n * @returns {void}\n */\nconst render = Component =>\n  ReactDOM.render(\n    <Component history={history} store={store} />,\n    document.getElementById(\"root\")\n  );\n//do the initial render\nrender(App);\n","/**\n * Loads the state from localStorage\n * @returns {Object} The loaded state\n */\nexport const loadState = () => {\n\ttry {\n\t\tconst serializedState = localStorage.getItem(\"state\");\n\t\tif (serializedState === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serializedState);\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n};\n\n/**\n * Saves a state to localStorage\n * @param {Object} state The state to store\n * @returns {void}\n */\nexport const saveState = state => {\n\tconst serializedState = JSON.stringify(state);\n\tlocalStorage.setItem(\"state\", serializedState);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { shadows } from \"../utilities/style\";\n\nconst StyledTime = styled.time`\n  display: ${({ inline }) => (inline ? \"inline-block\" : \"block\")};\n  color: #fff;\n  font-weight: normal;\n  text-shadow: ${shadows.textY};\n\n  margin: 0;\n  padding: 0;\n`;\n\n/**\n * The current time\n * @returns {Component} The component\n */\nclass Time extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = { seconds: 0 };\n  }\n  getTimeUntilNextMinute = () => {\n    let now = new Date();\n    return (60 - now.getSeconds()) * 1000;\n  };\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      this.updateTime();\n      this.updateInterval = setInterval(this.updateTime, 60 * 1000);\n    }, this.getTimeUntilNextMinute() + 500);\n  };\n  componentWillUnmount = () => {\n    clearInterval(this.updateInterval);\n  };\n  updateTime = () => {\n    this.setState({ seconds: new Date().getSeconds() });\n  };\n  render = () => {\n    const date = new Date();\n    return (\n      <StyledTime {...this.props}>\n        {date\n          .getHours()\n          .toString()\n          .padStart(2, \"0\")}\n        :\n        {date\n          .getMinutes()\n          .toString()\n          .padStart(2, \"0\")}\n      </StyledTime>\n    );\n  };\n}\n\nTime.propTypes = {\n  inline: PropTypes.bool\n};\n\nexport default Time;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { shadows } from \"../utilities/style\";\n\nconst StyledDay = styled.time`\n  display: ${({ inline }) => (inline ? \"inline-block\" : \"block\")};\n  color: #fff;\n  font-weight: normal;\n  text-shadow: ${shadows.textY};\n\n  margin: 0;\n  padding: 0;\n`;\n\n/**\n * The current time\n * @returns {Component} The component\n */\nclass Day extends React.PureComponent {\n  constructor() {\n    super();\n\n    this.state = { date: 0 };\n  }\n  getTimeUntilMidnight = () => {\n    let midnight = new Date();\n    midnight.setHours(24);\n    midnight.setMinutes(0);\n    midnight.setSeconds(0);\n    midnight.setMilliseconds(0);\n\n    return midnight.getTime() - new Date().getTime();\n  };\n  componentDidMount = () => {\n    setTimeout(() => {\n      this.updateDate();\n      this.updateInterval = setInterval(this.updateDate, 24 * 60 * 1000);\n    }, this.getTimeUntilMidnight() + 500);\n  };\n  componentWillUnmount = () => {\n    clearInterval(this.updateInterval);\n  };\n  updateDate = () => {\n    this.setState({ date: new Date().getDate() });\n  };\n  render = () => {\n    const date = new Date();\n    return <StyledDay {...this.props}>{date.toLocaleDateString()}</StyledDay>;\n  };\n}\n\nDay.propTypes = {\n  inline: PropTypes.bool\n};\n\nexport default Day;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuLink = styled(Link)`\n  position: absolute;\n  right: 5vw;\n  top: 10vh;\n\n  max-width: 5rem;\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst MenuSquare = styled.div`\n  display: block;\n  width: 2vw;\n  height: 2vw;\n\n  background-color: rgba(255, 255, 255, 0.8);\n  margin: 0 0.25vw 0.25vw 0;\n`;\n\n/**\n * Renders the menu button\n * @returns {Component} The react component\n */\nclass MenuButton extends React.PureComponent {\n  render = () => {\n    return (\n      <MenuLink {...this.props}>\n        <MenuSquare />\n        <MenuSquare />\n        <MenuSquare />\n        <MenuSquare />\n      </MenuLink>\n    );\n  };\n}\n\nexport default MenuButton;\n","/**\n * The tasks reducer\n * @param {Object} state The redux state\n * @param {Object} action The dispatched action\n * @returns {Object} The new state\n */\nconst tasksReducer = (\n  state = { isFetching: false, error: null, tasks: [] },\n  action\n) => {\n  switch (action.type) {\n    case \"FETCH_TASKS\":\n      return {\n        isFetching: action.isFetching,\n        error:\n          action.error || action.error === null ? action.error : state.error,\n        tasks: !action.isFetching && action.tasks ? action.tasks : state.tasks\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n\n/**\n * Gets all tasks\n * @param {Object} state The redux state\n * @returns {Object} All tasks\n */\nexport const getTasks = state => state.tasks;\n","import { combineReducers } from \"redux\";\nimport { loadingBarReducer as loadingBar } from \"react-redux-loading-bar\";\n\nimport tasks, * as fromTasks from \"./tasks\";\nimport { wrap } from \"../utilities/reducer\";\n\nconst appReducer = combineReducers({\n  loadingBar,\n  tasks\n});\n\n/**\n * Gets all tasks\n * @param {Object} state The redux state\n * @returns {Object} All tasks\n */\nexport const getTasks = wrap(fromTasks.getTasks, state => state.tasks);\n\n/**\n * Make sure that the state is removed if the user signed out of the application\n * @param {Object} state The previous state\n * @param {Object} action The action to process\n * @returns {Object} The new state\n */\nconst rootReducer = (state, action) => {\n  if (action.type === \"LOGOUT\") {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\nexport default rootReducer;\n","import { combineReducers } from \"redux\";\nimport pluralize from \"pluralize\";\nimport changeCase from \"change-case\";\n\n/**\n * Removes a key from an object\n * @param {Object} obj The object the key should be removed from\n * @param {string} deleteKey The key to delete\n * @returns {Object} The object without the given key\n */\nfunction removeKey(obj, deleteKey) {\n  let clone = Object.assign({}, obj);\n  delete clone[deleteKey];\n  return clone;\n}\n\n/**\n * Reducer holding all ids of a particular item type\n * @param {string} name The singular item name\n * @param {string} [uniqueProperty=\"id\"] A unique property all items of the given type will have\n * @param {function} [customCases=null] A function to handle other cases\n * @returns {Array<string|number>} The new state\n */\nexport const createAllIds = (\n  name,\n  uniqueProperty = \"id\",\n  customCases = null\n) => (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_\" + changeCase.snakeCase(name).toUpperCase():\n      return action.itemId\n        ? !action.isFetching && action.item && !action.error\n          ? state.includes(action.itemId)\n            ? state\n            : [...state, action.itemId]\n          : state.filter(item => item[uniqueProperty] !== action.itemId)\n        : state;\n\n    case \"FETCH_\" + changeCase.snakeCase(pluralize(name)).toUpperCase():\n      return action.items\n        ? !action.isFetching && !action.error\n          ? [\n              ...state,\n              ...action.items\n                .map(item => item[uniqueProperty])\n                .filter(id => !state.includes(id))\n            ]\n          : state.filter(item => !action.items.includes(item[uniqueProperty]))\n        : state;\n    case \"CREATE_\" + changeCase.snakeCase(name).toUpperCase():\n      return !action.isFetching &&\n        action.item &&\n        action.item[uniqueProperty] &&\n        !action.error &&\n        !state.includes(action.item[uniqueProperty])\n        ? [...state, action.item[uniqueProperty]]\n        : state;\n    case \"DELETE_\" + changeCase.snakeCase(name).toUpperCase():\n      return !action.isFetching && action.itemId\n        ? state.filter(id => id != action.itemId)\n        : state;\n    default:\n      if (customCases) {\n        return customCases(state, action);\n      }\n      return state;\n  }\n};\n\n/**\n * Reducer holding mapping the unique property to the item data\n * @param {string} name The singular item name\n * @param {string} [uniqueProperty=\"id\"] A unique property all items of the given type will have\n * @param {function} [customCases=null] A function to handle other cases\n * @returns {Array<string|number>} The new state\n */\nexport const createById = (name, uniqueProperty = \"id\", customCases = null) => (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case \"FETCH_\" + changeCase.snakeCase(name).toUpperCase():\n      return {\n        ...state,\n        [action.itemId]: {\n          ...(state[action.itemId] ? state[action.itemId] : {}),\n          ...action.item,\n          _isFetching: action.isFetching,\n          _error: action.error\n        }\n      };\n    case \"FETCH_\" + changeCase.snakeCase(pluralize(name)).toUpperCase():\n      return action.isFetching || action.error || !action.items\n        ? state\n        : {\n            ...state,\n            ...action.items.reduce((object, item) => {\n              object[item[uniqueProperty]] = {\n                ...state[item[uniqueProperty]],\n                ...item,\n                _isFetching: action.isFetching,\n                _error: action.error\n              };\n              if (action.page) {\n                object[item[uniqueProperty]]._page = action.page;\n              }\n              return object;\n            }, {})\n          };\n    case \"CREATE_\" + changeCase.snakeCase(name).toUpperCase():\n      return action.isFetching\n        ? state\n        : {\n            ...state,\n            [action.item[uniqueProperty]]: {\n              ...action.item,\n              _isFetching: action.isFetching,\n              _error: action.error\n            }\n          };\n    case \"UPDATE_\" + changeCase.snakeCase(name).toUpperCase():\n      return !action.isFetching && action.item && action.item[uniqueProperty]\n        ? {\n            ...state,\n            [action.item[uniqueProperty]]: {\n              ...state[action.item[uniqueProperty]],\n              ...action.item,\n              _isFetching: action.isFetching,\n              _error: action.error\n            }\n          }\n        : state;\n    case \"DELETE_\" + changeCase.snakeCase(name).toUpperCase():\n      return !action.isFetching && action.itemId\n        ? removeKey(state, action.itemId)\n        : state;\n    default:\n      if (customCases) {\n        return customCases(state, action);\n      }\n      return state;\n  }\n};\n\n/**\n * Creates a normalized reducer\n * @param {string} name The item name used for the actions\n * @param {string} [uniqueProperty=\"id\"] A unique property all items of the given type will have\n * @returns {function} The reducer\n */\nexport const createReducer = (name, uniqueProperty = \"id\") =>\n  combineReducers({\n    byId: createById(name, uniqueProperty),\n    allIds: createAllIds(name, uniqueProperty)\n  });\n\n/**\n * Gets a single item based on its id\n * @param {Object} state The correct part of the redux state\n * @param {number} itemId The items id to look for\n * @returns {Object} The item\n */\nexport const getItemById = (state, itemId) => state.byId[itemId];\n\n/**\n * Gets all items\n * @param {Object} state The correct part of the redux state\n * @returns {Array} All items\n */\nexport const getAllItems = state => state.allIds.map(id => state.byId[id]);\n\n/**\n * Wraps a function, useful for redux getters\n * @param {function} target The function to wrap\n * @param {function} mapState Maps the state to the part that should be passed\n * @returns {function} The wrapped function\n */\nexport const wrap = (target, mapState) => (...args) =>\n  target(mapState(args[0]), ...args.slice(1));\n"],"sourceRoot":""}